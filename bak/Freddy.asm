; 10 SYS4096
*=$0801
        BYTE    $0B, $08, $0A, $00, $9E, $34, $30, $39, $36, $00, $00, $00

TruckType$ = $0810
TruckCol$ = $0811
TruckSize$ = $0812
TruckOven$ = $0813

FRAME_COUNT = 3  
FRAME_DELAY = 7
SPRITE_INITIAL_DATA_POINTER = 128

; Big ups to GRay Defender
; Sprite animation from jeff-1amstudios


;macros

defm    fillscreen      ;Macro for filling screen (color or characters)

        lda     /1      ;lowbite for memeory start location
        sta     $fb
        lda     /2      ;highbite for memeory start location
        sta     $fc
        ldx     #00
        lda     /3,x    ;lowbite for read location
        sta     $fd
        lda     /4,x    ;hight bite for read location
        sta     $fe
        ldx     #4
        
        ldy     #$00
        lda     ($fd),y
        sta     ($fb),y
        dey
        bne     *-5
        inc     $fc
        inc     $fe
        dex
        bne     *-14

        endm

*=$1000
        
        lda     #3
        sta     TruckCol$
        lda     #0              ;set screen black
        sta     $D020
        sta     $D021

        fillscreen #$00,#$04,MAPL,MAPH
        fillscreen #$00,#$d8,COLL,COLH

        lda     #%00000001
        sta     $d015
        sta     $d01c
        lda     TruckCol$
        sta     $d027   
        lda     #$80
        sta     $07f8
        lda     #0
        sta     $d000
        lda     #235
        sta     $d001
        lda     #1
        sta     $D025
        lda     #12
        sta     $D026
        
loop    ldx     #00
        lda     $d012
        cmp     #$ff
        bne     loop
        ldy     #$33
delay   LDA     #$7F  ;%01111111  Thanks for buzbard on lemon64   This part checks if space is pressed need better way to just check what key was pressed for more keys
        STA     $DC00 
        LDA     $DC01 
        AND     #$10  ;mask %00010000 
        BNE     stay
        jmp     go
stay    lda     $d012
        cmp     #$ff
        bne     delay
        lda     $d010           ;from here----
        cmp     #%0000001
        BCC     toofar          ;this part checks if it's over 255 already
        lda     $d000
        cmp     #100
        BCC     left
        inc     $0400           ;debug for x-animation
        inc     $D800
        lda     #00
        sta     $d000
        lda     #%0000001
        eor     $d010
        sta     $d010
        jmp     left
toofar  lda     $d000
        cmp     #255
        BCC     left
        inc     $0400
        inc     $D800
        lda     #%0000001   
        eor     $d010
        sta     $d010        
left    inc     $d000           ;to here is just code that loops the sprite left to right on the screen
        JSR     on_screen_refresh   ;animate sprite
        dey
        bne     delay
        lda     #01     ;animate wave
        eor     55475
        sta     55475
        lda     #01
        eor     55476
        sta     55476
        jmp     loop
go      dec     TruckCol$
        lda     TruckCol$
        sta     $d027   
        jmp     loop

on_screen_refresh
        dec frame_delayer                       ; delay countdown
        bne skip
        lda #FRAME_DELAY
        sta frame_delayer
        dec frame_counter                      ;  frame_counter variable -= 1
        bne increment_sprite_pointer           ; if frame_counter > 0, goto .increment_sprite_pointer...
        lda #SPRITE_INITIAL_DATA_POINTER        ; ... otherwise, we should reset to the start of the animation
        sta $07f8                               ; reset the sprite pointer to start of sprite data
        ldx #FRAME_COUNT               
        stx frame_counter                      ; reset frame_counter to the nbr of sprite frames again
        rts                                     ; return
increment_sprite_pointer
        inc $07f8                              ; sprite pointer += 1 (moves to the next frame)
skip
        rts 

frame_counter byte FRAME_COUNT
frame_delayer byte FRAME_DELAY


*=$2000
; Truck right
 BYTE 170,170,0
 BYTE 170,170,160
 BYTE 175,254,144
 BYTE 191,255,144
 BYTE 191,255,144
 BYTE 191,255,169
 BYTE 191,255,170
 BYTE 170,170,170
 BYTE 85,169,86
 BYTE 65,85,5
 BYTE 60,84,240
 BYTE 60,0,240
 BYTE 60,0,240
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0

; Truck right
 BYTE 0,0,0
 BYTE 170,170,0
 BYTE 170,170,160
 BYTE 175,254,144
 BYTE 191,255,144
 BYTE 191,255,144
 BYTE 191,255,169
 BYTE 191,255,170
 BYTE 170,170,170
 BYTE 85,169,86
 BYTE 125,85,245
 BYTE 60,84,240
 BYTE 60,0,240
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0

; Truck right
 BYTE 170,170,0
 BYTE 170,170,160
 BYTE 175,254,144
 BYTE 191,255,144
 BYTE 191,255,144
 BYTE 191,255,169
 BYTE 191,255,170
 BYTE 170,170,170
 BYTE 85,169,86
 BYTE 125,85,245
 BYTE 60,84,240
 BYTE 60,0,240
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0,0,0
 BYTE 0

MAPL    byte    <MAP
MAPH    byte    >MAP

MAP     BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$20,$20,$E0,$E0,$20,$E0,$E0,$20,$20,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$E0,$E0,$E0,$E0,$E0,$20,$20,$20,$E0,$E0,$20,$E0,$20,$20,$E0,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$E0,$E0,$E0,$E0,$20,$20,$20,$20,$20,$E0,$E0,$20,$20,$E0,$E0,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$20,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$E0,$20,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$E0,$E0,$E0,$E0,$20,$20,$E0,$E0,$E0,$20,$20,$E0,$E0,$E0,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$E0,$20,$20,$E0,$20,$E0,$20,$20,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$E0,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$E0,$E0,$20,$20,$20,$E0,$E0,$20,$20,$E0,$E0,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$E0,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$E0,$20,$20,$E0,$20,$E0,$20,$E0,$20,$E0,$E0,$20,$E0,$20,$E0,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$E0,$20,$E0,$20,$20,$E0,$20,$E0,$20,$E0,$20,$20,$E0,$E0,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$E0,$20,$E0,$20,$20,$20,$E0,$E0,$20,$E0,$E0,$20,$E0,$20,$E0,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$E0,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$20,$20,$20,$E0,$E0,$20,$20,$E0,$E0,$20,$E0,$E0,$20,$20,$E0,$E0,$20,$20,$E0,$20,$E0,$20,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$E0,$20,$E0,$20,$20,$20,$E0,$20,$20,$20,$E0,$20,$E0,$20,$E0,$20,$E0,$20,$E0,$20,$E0,$20,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$20,$20,$E0,$20,$20,$20,$E0,$E0,$20,$20,$E0,$20,$E0,$20,$E0,$20,$E0,$20,$20,$E0,$20,$20,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$20,$20,$E0,$20,$20,$20,$E0,$20,$20,$20,$E0,$20,$E0,$20,$E0,$20,$E0,$20,$20,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$E0,$20,$20,$E0,$20,$20,$20,$20,$E0,$E0,$20,$E0,$E0,$20,$20,$E0,$E0,$20,$20,$20,$E0,$20,$20,$E0,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$06,$31,$20,$2D,$20,$13,$14,$01,$12,$14,$20,$20,$20,$06,$33,$20,$2D,$20,$0F,$10,$14,$09,$0F,$0E,$13,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
        BYTE    $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20




COLL    byte    <COL
COLH    byte    >COL

COL     BYTE    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$0A,$0A,$02,$02,$02,$02,$02,$02,$02,$02,$02,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$01,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$03,$03,$03,$03,$03,$02,$00,$00,$01,$01,$00,$01,$00,$00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$01,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$03,$03,$03,$03,$02,$01,$01,$01,$01,$01,$00,$01,$00,$00,$02,$01,$00,$00,$00,$00,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$02,$02,$01,$01,$01,$00,$01,$01,$00,$02,$02,$01,$01,$01,$00,$00,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$0A,$0A,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$01,$00,$01,$00,$00,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$0A,$0A,$02,$02,$01,$01,$02,$02,$02,$01,$01,$02,$02,$01,$00,$01,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$0A,$0A,$02,$01,$00,$00,$01,$02,$01,$01,$00,$01,$02,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$01,$00,$01,$01,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$00,$00,$00,$01,$01,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$01,$00,$01,$00,$01,$00,$01,$01,$01,$01,$00,$01,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$01,$00,$00,$01,$01,$01,$00,$01,$01,$00,$01,$01,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$01,$00,$00,$01,$01,$01,$00,$01,$01,$00,$01,$00,$01,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$00,$01,$01,$00,$01,$01,$01,$00,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00,$01,$01,$01,$00,$01,$01,$00,$00,$01,$00,$01,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$01,$00,$01,$01,$00,$01,$01,$01,$00,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$01,$01,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$01,$00,$01,$00,$00,$01,$01,$01,$00,$01,$01,$00,$01,$00,$01,$00,$01,$00,$00,$01,$01,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$01,$00,$00,$01,$01,$01,$01,$01,$01,$01,$01,$00,$01,$00,$01,$00,$00,$01,$01,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$01,$00,$00,$01,$01,$01,$01,$00,$01,$01,$00,$00,$01,$01,$00,$00,$00,$01,$01,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        BYTE    $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00